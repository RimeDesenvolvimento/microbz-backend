// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")

}


model User {
  id Int @id @default(autoincrement())
  name String
  email String @unique
  password String

}


enum CustomerStatus {
  ACTIVE
  INACTIVE
}
model Customer {
  id Int @id @default(autoincrement())
  name String
  taxId String? @unique 
  status CustomerStatus @default(ACTIVE)
  createdAt DateTime @default(now())

  sales Sale[]
  companyBranchId Int
  companyBranch CompanyBranch @relation(fields: [companyBranchId], references: [id])
  @@map("customer")

}


enum SaleType {
  SERVICE
  PRODUCT
}

enum SaleStatus {
  COMPLETED
  CANCELLED
}

model Sale {
  id Int @id @default(autoincrement())
  saleDate DateTime
  code String 
  description String
  quantity Int
  unitValue Decimal @db.Decimal(10, 2)
  totalValue Decimal @db.Decimal(10, 2)
  customerId Int
  registrationDate DateTime @default(now())
  type SaleType
  status SaleStatus 

  customer Customer @relation(fields: [customerId], references: [id])
  companyBranchId Int
  companyBranch CompanyBranch @relation(fields: [companyBranchId], references: [id])

  @@map("sale")
}


model Company {
  id Int @id @default(autoincrement())
  name String
 
  createdAt DateTime @default(now())
  companyBranches CompanyBranch[]
  @@map("company")
}

model CompanyBranch {
  id Int @id @default(autoincrement())
  name String
  companyId Int
  code String? 

  company Company @relation(fields: [companyId], references: [id])
  sales Sale[]
  customers Customer[]
  createdAt DateTime @default(now())

  @@unique([name, companyId])
  @@unique([code, companyId])
  @@map("company_branch")
}